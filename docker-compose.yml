services:
  web:
    build: .
    ports:
      - "5001:5001"
    volumes:
      # Monta i volumi necessari
      - /home/luca/cloud/luca/files/music:/app/music
      - ./cookies.txt:/app/cookies.txt
      - ./seed_artists.txt:/app/seed_artists.txt
      - ./processed_artists.txt:/app/processed_artists.txt
      - ./discovery_settings.json:/app/discovery_settings.json
    environment:
      # Passa le variabili d'ambiente al container
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      # Imposta la porta di Flask
      - FLASK_APP=app.py
      - FLASK_RUN_PORT=5001
      - FLASK_RUN_HOST=0.0.0.0
    command: ["flask", "run"]
    networks:
      - proxy_network

  discover:
    build: .
    volumes:
      # Monta i volumi necessari
      - /home/luca/cloud/luca/files/music:/app/music
      - ./cookies.txt:/app/cookies.txt
      - ./seed_artists.txt:/app/seed_artists.txt
      - ./processed_artists.txt:/app/processed_artists.txt
      - ./discovery_settings.json:/app/discovery_settings.json
    environment:
      # Passa le variabili d'ambiente al container
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      # Nota: le variabili di telegram non sono usate dallo script discover
    command: ["python", "discover.py"]
    networks:
      - proxy_network

networks:
  proxy_network: # Definisce come usare la rete esterna
    # Assicurati che questo sia il nome ESATTO della rete usata da Nginx Proxy Manager
    name: proxy-network
    external: true
